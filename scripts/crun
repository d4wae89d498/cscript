#!/bin/sh

if [[ $# == "1" ]]; then
	set -- "" "$1"
	echo "?"
fi;
echo "Compilling [$@] ..."
echo $1;


tmp_dir=/tmp/.cedilla
mkdir -p $tmp_dir
file=$(cat $2)
tmp_name=$tmp_dir/.tmp_$(date +%s)$(uuidgen)

extract_path() {
    local input="$1"
    local path_pattern="/tmp/.tmp_sh/"

    # Check if the input starts with the pattern
    if [[ $input == $path_pattern* ]]; then
        # Extract the part after the pattern
        echo "${input#$path_pattern}"
    else
        # If the pattern is not found, return the input as is
        echo "$input"
    fi
}
cat > $tmp_name.c <<EOF
#include <libc.h>
#include <ctype.h>
#include <stdbool.h>
int main(int argc, char	**argv)
{
ON_STARTUP
#line $(echo $3 + 1 | bc) "$(extract_path "$2")"
$file
}
EOF
#echo cc $(sed -e 's/^"//' -e 's/"$//' <<<"$1") $file
cc -I$(pwd) $(sed -e 's/^"//' -e 's/"$//' <<<"$1") $tmp_name.c -o $tmp_name.out
#exit;
if [[ $? == "0" ]]; then
	echo "Compilation succeed";
else
	echo "Compilation failed";
fi;
#&& echo "done " && echo "________"
shift
shift
#rm $tmp_name.c
echo "Running [$tmp_name.out] ..."
$tmp_name.out $@
echo "Done."
rm $tmp_name.out
